vector<int> kLargest(int arr[], int n, int k) {
	    // code here
	    priority_queue<int,vector<int>,greater<int>> pq;
	    for(int i=0;i<k;i++){
	        pq.push(arr[i]);
	    }
	    
	    for(int i=k;i<n;i++){
	        int ele=arr[i];
	        if(ele>pq.top()){
	            pq.pop();
	            pq.push(ele);
	        }
	        
	    }
	    
	    vector<int> ans;
	    while(!pq.empty()){
	        int temp=pq.top();
	        pq.pop();
	        
	        ans.push_back(temp);
	    }
	    sort(ans.begin(),ans.end(),greater <>());
	    return ans;
	}