void inorder(Node* root,vector<int> &in){
    if(root==NULL){
        return;
    }
    
    inorder(root->left,in);
    in.push_back(root->data);
    inorder(root->right,in);
}

Node* bst_t_bbst(vector<int> in,int s,int e){
    if(s>e){
        return NULL;
    }
    int mid=(s+e)/2;
    
    Node* new_root=new Node(in[mid]);
    new_root->left=bst_t_bbst(in,s,mid-1);
    new_root->right=bst_t_bbst(in,mid+1,e);
    
    return new_root;
    
}

Node* buildBalancedTree(Node* root)
{
	// Code here
	vector<int> in;
	inorder(root,in);
	
	Node* new_root = bst_t_bbst(in,0,in.size()-1);
	return new_root;
	
}