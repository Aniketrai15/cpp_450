private:
    void topsort(int node,unordered_map<int,bool> &visited,stack<int> &st,vector<int> adj[]){
        visited[node]=true;
        for(auto neighbour:adj[node]){
            if(!visited[neighbour]){
                topsort(neighbour,visited,st,adj);
            }
        }
        
        st.push(node);
    }
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    unordered_map<int,bool> visited;
	    stack<int> st;
	    for(int i=0;i<V;i++){
	        if(!visited[i]){
	            topsort(i,visited,st,adj);
	        }
	    }
	    
	    vector<int> ans;
	    while(!st.empty()){
	        int ele = st.top();
	        st.pop();
	        ans.push_back(ele);
	    }
	    
	    return ans;
	}