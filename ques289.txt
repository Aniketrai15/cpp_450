private:
    vector<long long> prev_smaller_ele(long long arr[],int n){
        vector<long long> ans(n);
        stack<long long> st;
        for(int i=0;i<n;i++){
            while(!st.empty() and arr[st.top()]>=arr[i]){
                st.pop();
            }
            if(st.empty()){
                ans[i]=-1;
            }
            else{
                ans[i]=st.top();
            }
            
            st.push(i);
        }
        
        return ans;
        
    }
    
    vector<long long> next_smaller_ele(long long arr[],int n){
        vector<long long> ans(n);
        stack<long long> st;
        
        for(int i=n-1;i>=0;i--){
            while(!st.empty() and arr[st.top()]>=arr[i]){
                st.pop();
            }
            if(st.empty()){
                ans[i]=n;
            }
            else{
                ans[i]=st.top();
            }
            
            st.push(i);
        }
        
        return ans;
    }
    public:
    //Function to find largest rectangular area possible in a given histogram.
    long long getMaxArea(long long arr[], int n)
    {
        // Your code here
        vector<long long> prev_smaller = prev_smaller_ele(arr,n);
        vector<long long> next_smaller = next_smaller_ele(arr,n);
        
        long long ans =INT_MIN;
        
        for(int i=0;i<n;i++){
            long long l = arr[i];
            long long b = next_smaller[i]-prev_smaller[i]-1;
            ans = max(ans,l*b);
        }
        
        return ans;
    }