    private:
    pair<bool,int> i_sum(Node* root){
        if(root==NULL){
            pair<bool,int> p = make_pair(true,0);
            return p;
        }
        
        if(root->left==NULL and root->right==NULL){
            pair<bool,int> p = make_pair(true,root->data);
            return p;
        }
        
        
        pair<bool,int> left=i_sum(root->left);
        pair<bool,int> right=i_sum(root->right);
        
        bool a_l = left.first;
        bool a_r = right.first;
        
        pair<bool,int> ans;
        bool res = root->data==left.second+right.second;
        if(a_l and a_r and res){
            ans.first=true;
            ans.second=2*root->data;
        }
        else{
            ans.first=false;
            ans.second=2*root->data;
        }
        return ans;
        
    }
    public:
    bool isSumTree(Node* root)
    {
         // Your code here
         return i_sum(root).first;
    }