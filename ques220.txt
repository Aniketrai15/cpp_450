static bool cmp(Job a,Job b){
        return a.profit > b.profit;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        sort(arr,arr+n,cmp);
        int max_deadline = INT_MIN;
        for(int i=0;i<n;i++){
            max_deadline = max(max_deadline,arr[i].dead);
        }
        
        
        vector<int> schedule(max_deadline+1,-1);
        int count=0;
        int max_profit=0;
        for(int i=0;i<n;i++){
            int curr_profit=arr[i].profit;
            int curr_id = arr[i].id;
            int curr_dead = arr[i].dead;
            
            
            for(int k=curr_dead;k>0;k--){
                if(schedule[k]==-1){
                    schedule[k]=curr_id;
                    max_profit+=curr_profit;
                    count++;
                    break;
                }
            }
        }
        
        vector<int> ans;
        ans.push_back(count);
        ans.push_back(max_profit);
        
        return ans;
    } 