private:
    bool solve(int n,int arr[],int W){
        vector<vector<bool>> dp(n+1,vector<bool>(W+1));
        for(int i=0;i<=n;i++){
            for(int j=0;j<=W;j++){
                if(i==0){
                    dp[i][j]=false;
                }
                if(j==0){
                    dp[i][j]=true;
                }
            }
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=W;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]] or dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        
        return dp[n][W];
    }
public:
    int equalPartition(int N, int arr[])
    {
        // code here
        int sum=0;
        for(int i=0;i<N;i++){
            sum+=arr[i];
        }
        
        if(sum%2!=0){
            return false;
        }
        
        bool ans = solve(N,arr,sum/2);
        if(ans){
            return 1;
        }
        else{
            return 0;
        }
    }