int orangesRotting(vector<vector<int>>& grid) {
        // Code here
        queue<pair<int,int>> q;
        
        int row = grid.size();
        int col = grid[0].size();
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(grid[i][j]==2){
                    q.push({i,j});
                }
            }
        }
        q.push({-1,-1});
        
        int ans = 0;
        while(!q.empty()){
            int i = q.front().first;
            int j = q.front().second;
            if(i==-1 and j==-1 and q.size()==1){
                q.pop();
                break;
            }
            else if(i==-1 and j==-1 and q.size()>1){
                ans++;
                q.pop();
                q.push({-1,-1});
            }
            else{
                if((i-1)>=0 and grid[i-1][j]==1){
                    grid[i-1][j]=2;
                    q.push({i-1,j});
                }
                
                if((j-1)>=0 and grid[i][j-1]==1){
                    grid[i][j-1]=2;
                    q.push({i,j-1});
                }
                if((i+1)<row and grid[i+1][j]==1){
                    grid[i+1][j]=2;
                    q.push({i+1,j});
                }
                if((j+1)<col and grid[i][j+1]==1){
                    grid[i][j+1]=2;
                    q.push({i,j+1});
                }
                q.pop();
            }
        }
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(grid[i][j]==1){
                    ans = -1;
                    break;
                }
            }
        }
        
        return ans;
        
    }